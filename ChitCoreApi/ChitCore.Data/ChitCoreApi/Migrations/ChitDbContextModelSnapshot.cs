// <auto-generated />
using System;
using ChitCore.Data.v1;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChitCoreApi.Migrations
{
    [DbContext(typeof(ChitDbContext))]
    partial class ChitDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ChitCore.Data.v1.Models.AuctionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ActionedDate");

                    b.Property<DateTime>("AmountDueBy");

                    b.Property<decimal>("BidAmount");

                    b.Property<int>("ChitId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("AuctionDetails");
                });

            modelBuilder.Entity("ChitCore.Data.v1.Models.Chit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AuctionDate");

                    b.Property<int>("Commission");

                    b.Property<DateTime>("CreateDate");

                    b.Property<DateTime?>("EndDate");

                    b.Property<int>("ManagerId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("NoOfMonths");

                    b.Property<int>("NoOfUsers");

                    b.Property<DateTime?>("StartDate");

                    b.Property<int>("StatusId");

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.ToTable("Chits");
                });

            modelBuilder.Entity("ChitCore.Data.v1.Models.ChitUser", b =>
                {
                    b.Property<int>("ChitId");

                    b.Property<int>("UserId");

                    b.Property<int>("ChitUserTypeId");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ChitId", "UserId");

                    b.HasAlternateKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ChitUsers");
                });

            modelBuilder.Entity("ChitCore.Data.v1.Models.PaymentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountPaid");

                    b.Property<int>("ChitId");

                    b.Property<DateTime>("PaidDate");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("PaymentDetails");
                });

            modelBuilder.Entity("ChitCore.Data.v1.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<DateTime>("LastUpdatedDate");

                    b.Property<string>("MInitial");

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.Property<int>("StatusId");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ChitCore.Data.v1.Models.ChitUser", b =>
                {
                    b.HasOne("ChitCore.Data.v1.Models.Chit", "Chit")
                        .WithMany("ChitUsers")
                        .HasForeignKey("ChitId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ChitCore.Data.v1.Models.User", "User")
                        .WithMany("ChitUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
